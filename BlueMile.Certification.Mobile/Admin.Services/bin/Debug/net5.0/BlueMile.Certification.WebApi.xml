<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlueMile.Certification.WebApi</name>
    </assembly>
    <members>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.#ctor(BlueMile.Certification.WebApi.Services.ICertificationRepository,Microsoft.Extensions.Logging.ILogger{BlueMile.Certification.WebApi.Api.Controllers.CertificationController})">
            <summary>
            Creates a new default instance of <see cref="T:BlueMile.Certification.WebApi.Api.Controllers.CertificationController"/>.
            </summary>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.GetOwners(BlueMile.Certification.Web.ApiModels.FindOwnerModel)">
            <summary>
            Gets all the active owners in the system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.GetOwnerByUsername(System.String)">
            <summary>
            Gets a certain owner with the given username.
            </summary>
            <param name="username">
                The username of the owner to find.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.GetOwner(System.String)">
            <summary>
            Gets the owner with the corresponding unique identifier.
            </summary>
            <param name="id">
                The unique identifier of the owner to find.
            </param>
            <returns>
                Returns a <see cref="T:BlueMile.Certification.Web.ApiModels.OwnerModel"/> with the given owner identifier.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.UpdateOwner(System.Guid,BlueMile.Certification.Web.ApiModels.UpdateOwnerModel)">
            <summary>
            Updates an owner with the given unique identifier with the given properties.
            </summary>
            <param name="id">
                The unique identifier of the owner that needs to be updated.
            </param>
            <param name="ownerEntity">
                The owner details to update to.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.CreateOwner(BlueMile.Certification.Web.ApiModels.CreateOwnerModel)">
            <summary>
            Creates a new owner with the given details.
            </summary>
            <param name="ownerEntity">
                The <see cref="T:BlueMile.Certification.Web.ApiModels.OwnerModel"/> to create.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.DeleteOwner(System.Nullable{System.Guid})">
            <summary>
            Deletes an owner with the given unique identifier.
            </summary>
            <param name="id">
                The unique identifier of the owner.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.GetBoatsByOwnerId(System.Guid)">
            <summary>
            Gets all the boats with the corresponding unique owner identifier.
            </summary>
            <param name="ownerId">
                The unique identifier of the owner.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.GetBoat(System.Guid)">
            <summary>
            Gets a <see cref="T:BlueMile.Certification.Web.ApiModels.BoatModel"/> with the given unique identifier.
            </summary>
            <param name="id">
                The unique identifier of the boat to retrieve.
            </param>
            <returns>
                Returns a <see cref="T:BlueMile.Certification.Web.ApiModels.BoatModel"/> with the given unique identifier.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.UpdateBoat(System.Guid,BlueMile.Certification.Web.ApiModels.UpdateBoatModel)">
            <summary>
            Updates an existing boat with the corresponsing unique identifier with the given details.
            </summary>
            <param name="id">
                The unique identifier of the boat.
            </param>
            <param name="boatEntity">
                The details to update the boat with.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.CreateBoat(BlueMile.Certification.Web.ApiModels.CreateBoatModel)">
            <summary>
            Creates a new boat entity with the given properties.
            </summary>
            <param name="boatEntity">
                The new boat properties to create with.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.DeleteBoat(System.Guid)">
            <summary>
            Deletes a boat with the given unique identifier.
            </summary>
            <param name="id">
                The unique identifier of the boat.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.GetItemsByBoatId(System.Guid)">
            <summary>
            Gets list of items with the boat unique identifier given.
            </summary>
            <param name="boatId">
                The unique identifier of the boat.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.GetItem(System.Guid)">
            <summary>
            Gets a specific item with the given unique identifier specified.
            </summary>
            <param name="itemId">
                The unique identifier of the item.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.UpdateItem(System.Guid,BlueMile.Certification.Web.ApiModels.UpdateItemModel)">
            <summary>
            Updates an existing boat with the corresponsing unique identifier with the given details.
            </summary>
            <param name="itemId">
                The unique identifier of the boat.
            </param>
            <param name="itemEntity">
                The details to update the boat with.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.CreateItem(BlueMile.Certification.Web.ApiModels.CreateItemModel)">
            <summary>
            Creates a new boat entity with the given properties.
            </summary>
            <param name="itemEntity">
                The new boat properties to create with.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.DeleteItem(System.Guid)">
            <summary>
            Deletes an item with the given unique identifier.
            </summary>
            <param name="itemId">
                The unique identifier of the item.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.GetControllerActionNames">
            <summary>
            Gets the name of the action where an error occurs.
            </summary>
            <returns>
            	Returns the string name of the action where the error occurred.
            </returns>
        </member>
        <member name="F:BlueMile.Certification.WebApi.Api.Controllers.CertificationController.logger">
            <summary>
            Used for logging events
            </summary>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.UsersController.#ctor(Microsoft.AspNetCore.Identity.SignInManager{BlueMile.Certification.Data.Models.ApplicationUser},Microsoft.AspNetCore.Identity.UserManager{BlueMile.Certification.Data.Models.ApplicationUser},Microsoft.EntityFrameworkCore.IDbContextFactory{BlueMile.Certification.Data.ApplicationDbContext},Microsoft.Extensions.Logging.ILogger{BlueMile.Certification.WebApi.Api.Controllers.UsersController},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Instantiates a new default instance of the <see cref="T:BlueMile.Certification.WebApi.Api.Controllers.UsersController"/>
            </summary>
            <param name="signIn"></param>
            <param name="dbFactory"></param>
            <param name="manager"></param>
            <param name="logger"></param>
            <param name="config"></param>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.UsersController.Register(BlueMile.Certification.Web.ApiModels.UserRegistrationModel)">
            <summary>
            Registers a new user with the given properties.
            </summary>
            <param name="createUser">
                The <see cref="T:BlueMile.Certification.Web.ApiModels.UserRegistrationModel"/> object with the user details to register.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Api.Controllers.UsersController.Login(BlueMile.Certification.Web.ApiModels.UserLoginModel)">
            <summary>
            Logs the user is with the given details.
            </summary>
            <param name="userModel">
                The user details to log in with.
            </param>
            <returns></returns>
        </member>
        <member name="F:BlueMile.Certification.WebApi.Api.Controllers.UsersController.logger">
            <summary>
            Used for logging events
            </summary>
        </member>
        <member name="F:BlueMile.Certification.WebApi.Api.Controllers.UsersController.dbFactory">
            <summary>
            Provides access to the underlying data store.
            </summary>
        </member>
        <member name="T:BlueMile.Certification.WebApi.Services.CertificationRepository">
            <summary>
            Contains the implementation off all the <see cref="T:BlueMile.Certification.WebApi.Services.ICertificationRepository"/> 
            CRUD methods for <c>Owners</c>, <c>Boats</c> and <c>Items</c>.
            </summary>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.#ctor(BlueMile.Certification.Data.ApplicationDbContext,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Creates a new instance of <see cref="T:BlueMile.Certification.WebApi.Services.CertificationRepository"/>.
            </summary>
            <param name="dbContext"></param>
            <param name="hostEnvironment"></param>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.CreateOwner(BlueMile.Certification.Web.ApiModels.CreateOwnerModel)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.DeleteOwner(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.DoesOwnerExist(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.FindAllOwners(BlueMile.Certification.Web.ApiModels.FindOwnerModel)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.FindOwnerByUsername(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.FindOwnerById(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.UpdateOwner(BlueMile.Certification.Web.ApiModels.UpdateOwnerModel)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.CreateBoat(BlueMile.Certification.Web.ApiModels.CreateBoatModel)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.DeleteBoat(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.DoesBoatExist(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.FindAllBoats(BlueMile.Certification.Web.ApiModels.FindBoatsModel)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.FindAllBoatsByOwnerId(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.FindBoatById(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.UpdateBoat(BlueMile.Certification.Web.ApiModels.UpdateBoatModel)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.CreateItem(BlueMile.Certification.Web.ApiModels.CreateItemModel)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.DeleteItem(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.DoesItemExist(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.FindAllItems(BlueMile.Certification.Web.ApiModels.FindItemsModel)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.FindItemById(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.FindItemsByBoatId(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.UpdateItem(BlueMile.Certification.Web.ApiModels.UpdateItemModel)">
            <inheritdoc/>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.CertificationRepository.DidAddressChange(BlueMile.Certification.Data.Models.LegalEntityAddress,BlueMile.Certification.Data.Models.LegalEntityAddress)">
            <summary>
            Validates whether or not the address changed in a significant manner at all.
            </summary>
            <param name="address">
                The new address from the service.
            </param>
            <param name="existingAddress">
                The existing address on the system.
            </param>
            <returns>
                Returns a boolean flag indicating if the address changed.
            </returns>
        </member>
        <member name="T:BlueMile.Certification.WebApi.Services.ICertificationRepository">
            <summary>
            <c>ICertificationRepository</c> contains all of the relevant 
            CRUD operations for <c>Owners</c>, <c>Boats</c> and <c>Items</c>.
            </summary>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.FindAllOwners(BlueMile.Certification.Web.ApiModels.FindOwnerModel)">
            <summary>
            Finds all of the owners with the given filtering criteria.
            </summary>
            <param name="findOwnerModel">
                The filtering criteria to find the owners with.
            </param>
            <returns>
                Returns a list of <see cref="T:BlueMile.Certification.Web.ApiModels.OwnerModel"/> matching the filtering criteria.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.FindOwnerById(System.Guid)">
            <summary>
            Finds an <see cref="T:BlueMile.Certification.Web.ApiModels.OwnerModel"/> with the given unique identifier.
            </summary>
            <param name="ownerId">
                The unique identifier of the owner to find.
            </param>
            <returns>
                Returns a <see cref="T:BlueMile.Certification.Web.ApiModels.OwnerModel"/> containing all of the owner details.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.FindOwnerByUsername(System.String)">
            <summary>
            Finds an <see cref="T:BlueMile.Certification.Web.ApiModels.OwnerModel"/> with the given username.
            </summary>
            <param name="username">
                The username of the owner to find.
            </param>
            <returns>
                Returns a <see cref="T:BlueMile.Certification.Web.ApiModels.OwnerModel"/> with the given username.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.DoesOwnerExist(System.Guid)">
            <summary>
            Determines whether a user with the specified unique identifier exists.
            </summary>
            <param name="ownerId">
                The unique identifier of the owner to validate.
            </param>
            <returns>
                Returns a boolean flag indicating if the owner exists.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.CreateOwner(BlueMile.Certification.Web.ApiModels.CreateOwnerModel)">
            <summary>
            Creates a new <c>IndividualOwner</c> from the given <see cref="T:BlueMile.Certification.Web.ApiModels.CreateOwnerModel"/>.
            </summary>
            <param name="entity">
                Contains all of the relevant properties of the owner that will be created.
            </param>
            <returns>
                Returns the unique identifier of the owner created.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.UpdateOwner(BlueMile.Certification.Web.ApiModels.UpdateOwnerModel)">
            <summary>
            Updates an existing owner with the given <see cref="T:BlueMile.Certification.Web.ApiModels.UpdateOwnerModel"/> properties.
            </summary>
            <param name="entity">
                The updated details of the owner to update.
            </param>
            <returns>
                Returns the unique identifier of the owner that was updated.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.DeleteOwner(System.Guid)">
            <summary>
            Deletes the owner with the given unique identifier.
            </summary>
            <param name="ownerId">
                The unique identifier of the owner to delete.
            </param>
            <returns>
                Returns a boolean flag indicating if the owner was successfully removed.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.FindAllBoats(BlueMile.Certification.Web.ApiModels.FindBoatsModel)">
            <summary>
            Finds all of the boats with the given filtering parameters.
            </summary>
            <param name="model">
                The filtering parameters to find the boats with.
            </param>
            <returns>
                Returns a list of <see cref="T:BlueMile.Certification.Web.ApiModels.BoatModel"/> of all the boats that match the filtering parameters.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.FindAllBoatsByOwnerId(System.Guid)">
            <summary>
            Finds all of the <see cref="T:BlueMile.Certification.Web.ApiModels.BoatModel"/> linked to the given unique owner identifier.
            </summary>
            <param name="ownerId">
                The unique identifier of the owner linked to the boats.
            </param>
            <returns>
                Returns a list <see cref="T:BlueMile.Certification.Web.ApiModels.BoatModel"/> linked to the given owner.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.FindBoatById(System.Guid)">
            <summary>
            Finds a specific boat with the given unique identifier.
            </summary>
            <param name="boatId">
                The unique identifier of the boat to find.
            </param>
            <returns>
                Returns a <see cref="T:BlueMile.Certification.Web.ApiModels.BoatModel"/> matching the given unique identifier.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.DoesBoatExist(System.Guid)">
            <summary>
            Determines whether a boat with the given unique identifier exists.
            </summary>
            <param name="boatId">
                The unique identifier of the boat to validate.
            </param>
            <returns>
                Returns a boolean flag indicating if the boat exists.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.CreateBoat(BlueMile.Certification.Web.ApiModels.CreateBoatModel)">
            <summary>
            Creates a new <c>Boat</c> with the given <see cref="T:BlueMile.Certification.Web.ApiModels.CreateBoatModel"/>.
            </summary>
            <param name="entity">
                The <see cref="T:BlueMile.Certification.Web.ApiModels.CreateBoatModel"/> containing all of the properties to create the boat with.
            </param>
            <returns>
                Returns a unique identifier of the boat that was created.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.UpdateBoat(BlueMile.Certification.Web.ApiModels.UpdateBoatModel)">
            <summary>
            Updates an existing boat with the given <see cref="T:BlueMile.Certification.Web.ApiModels.UpdateBoatModel"/>.
            </summary>
            <param name="entity">
                The updated properties of the boat.
            </param>
            <returns>
                Returns a unique identifier of the updated boat.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.DeleteBoat(System.Guid)">
            <summary>
            Deletes an existing boat with the given unique identifier.
            </summary>
            <param name="boatId">
                The unique identifier of the boat.
            </param>
            <returns>
                Returns a boolean flag indicating if the boat was removed successfully.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.FindAllItems(BlueMile.Certification.Web.ApiModels.FindItemsModel)">
            <summary>
            Finds all of the items matching the given filtering parameters.
            </summary>
            <param name="model">
                The filtering parameters to find the items with.
            </param>
            <returns>
                Returns a list of <see cref="T:BlueMile.Certification.Web.ApiModels.ItemModel"/> matching the given filtering parameters.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.FindItemsByBoatId(System.Guid)">
            <summary>
            Finds a list of <see cref="T:BlueMile.Certification.Web.ApiModels.ItemModel"/> linked to the given boat unique identifier.
            </summary>
            <param name="boatId">
                The unique identifier of the boat.
            </param>
            <returns>
                Returns a list <see cref="T:BlueMile.Certification.Web.ApiModels.ItemModel"/>.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.FindItemById(System.Guid)">
            <summary>
            Finds a specific <see cref="T:BlueMile.Certification.Web.ApiModels.ItemModel"/> with the given unique identifier.
            </summary>
            <param name="id">
                The unique identifier of the item.
            </param>
            <returns>
                Returns a <see cref="T:BlueMile.Certification.Web.ApiModels.ItemModel"/> matching the given unique identifier.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.DoesItemExist(System.Guid)">
            <summary>
            Determines whether a specified <c>Item</c> exists.
            </summary>
            <param name="id">
                The unique identifier of the item to validate.
            </param>
            <returns>
                Returns a boolean flag indicating if an item exists.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.CreateItem(BlueMile.Certification.Web.ApiModels.CreateItemModel)">
            <summary>
            Creates a new <c>Item</c> with the given <see cref="T:BlueMile.Certification.Web.ApiModels.CreateItemModel"/> properties.
            </summary>
            <param name="entity">
                The properties of the item to create.
            </param>
            <returns>
                The unique identifier of the item created.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.UpdateItem(BlueMile.Certification.Web.ApiModels.UpdateItemModel)">
            <summary>
            Updates an existing <c>Item</c> with the given <see cref="T:BlueMile.Certification.Web.ApiModels.UpdateItemModel"/> properties.
            </summary>
            <param name="entity">
                The updated item properties.
            </param>
            <returns>
                The unique identifier of the updated item.
            </returns>
        </member>
        <member name="M:BlueMile.Certification.WebApi.Services.ICertificationRepository.DeleteItem(System.Guid)">
            <summary>
            Deletes an existing <c>Item</c> with the given unique identifier.
            </summary>
            <param name="itemId">
                The unique identifier of the item.
            </param>
            <returns>
                Returns a boolean flag indicating if the item was successfully removed.
            </returns>
        </member>
    </members>
</doc>
